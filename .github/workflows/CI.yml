name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  macos-x86_64:
    runs-on: macos-13
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          CXX: clang++
          CC: clang
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: dist

  macos-arm64:
    runs-on: macos-13-xlarge
    strategy:
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        env:
          CXX: clang++
          CC: clang
        with:
          python-version: '3.12'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-arm64
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, macos-x86_64, sdist] # macos-arm64
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      # - name: Publish to PyPI
      #   uses: PyO3/maturin-action@v1
      #   env:
      #     MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   with:
      #     command: upload
      #     args: --skip-existing dist/*
      - name: Upload Wheel to GitHub Releases
        # zh: 上传 Wheel 到 GitHub Releases
        # if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
           token: ${{ secrets.GITHUB_TOKEN }}
           overwrite: true
           tag_name: released
           name: latest-whl
           draft: false
           prerelease: true
           make_latest: true
           generate_release_notes: true
           # upload_url: ${{ github.event.release.upload_url }}
           files: ${{ github.workspace }}/dist/*.whl
           # asset_name: your_package_name-${{ matrix.python-version }}.whl  # zh: 请替换为实际的 wheel 文件名
           # asset_content_type: application/octet-stream
